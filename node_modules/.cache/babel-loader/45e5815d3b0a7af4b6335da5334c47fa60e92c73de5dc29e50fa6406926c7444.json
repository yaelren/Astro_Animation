{"ast":null,"code":"var _jsxFileName = \"/Users/yaelre/Documents/Repos/AstroDemo/src/ChatMock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STARTER = [{\n  id: 1,\n  role: \"assistant\",\n  text: \"Hey! I’m Astro. Ask me anything ✨\"\n}, {\n  id: 2,\n  role: \"assistant\",\n  text: \"Tip: say 'publish', 'undo', 'small', or 'loader'.\"\n}];\nexport default function ChatMock(_ref) {\n  _s();\n  let {\n    onSend = () => {},\n    onComposerActive = () => {},\n    onAssistantSpot = () => {},\n    waitForPulse = async () => {},\n    onAssistantDone = () => {}\n  } = _ref;\n  const [messages, setMessages] = useState(STARTER);\n  const [input, setInput] = useState(\"\");\n  const [pending, setPending] = useState(false);\n  const listRef = useRef(null);\n  const composerRef = useRef(null);\n  useEffect(() => {\n    var _listRef$current;\n    (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo({\n      top: listRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }, [messages, pending]);\n\n  // Move Astro to composer when user focuses/starts typing\n  const reportComposer = () => {\n    var _composerRef$current, _composerRef$current$;\n    const rect = (_composerRef$current = composerRef.current) === null || _composerRef$current === void 0 ? void 0 : (_composerRef$current$ = _composerRef$current.getBoundingClientRect) === null || _composerRef$current$ === void 0 ? void 0 : _composerRef$current$.call(_composerRef$current);\n    onComposerActive(rect);\n  };\n  const send = async () => {\n    var _listRef$current2, _typing$getBoundingCl, _typing$getBoundingCl2, _listRef$current3, _listRef$current3$get, _composerRef$current2, _composerRef$current3;\n    const trimmed = input.trim();\n    if (!trimmed || pending) return;\n\n    // user message\n    const userMsg = {\n      id: Date.now(),\n      role: \"user\",\n      text: trimmed\n    };\n    setMessages(m => [...m, userMsg]);\n    setInput(\"\");\n    onSend(trimmed);\n\n    // show typing bubble\n    setPending(true);\n\n    // ensure typing bubble is in DOM, then move Astro there\n    await new Promise(r => requestAnimationFrame(r));\n    await new Promise(r => requestAnimationFrame(r));\n    const typing = (_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 ? void 0 : _listRef$current2.querySelector(\".bubble.assistant .typing\");\n    const rect = (_typing$getBoundingCl = typing === null || typing === void 0 ? void 0 : (_typing$getBoundingCl2 = typing.getBoundingClientRect) === null || _typing$getBoundingCl2 === void 0 ? void 0 : _typing$getBoundingCl2.call(typing)) !== null && _typing$getBoundingCl !== void 0 ? _typing$getBoundingCl : (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 ? void 0 : (_listRef$current3$get = _listRef$current3.getBoundingClientRect) === null || _listRef$current3$get === void 0 ? void 0 : _listRef$current3$get.call(_listRef$current3);\n    onAssistantSpot(rect);\n\n    // run Pulse flourish while \"thinking\"\n    await waitForPulse();\n\n    // now render assistant message\n    const reply = mockReply(trimmed);\n    const newMsg = {\n      id: Date.now() + 1,\n      role: \"assistant\",\n      text: reply\n    };\n    setMessages(m => [...m, newMsg]);\n    setPending(false);\n\n    // after it paints, send Astro back to composer\n    await new Promise(r => requestAnimationFrame(r));\n    const cRect = (_composerRef$current2 = composerRef.current) === null || _composerRef$current2 === void 0 ? void 0 : (_composerRef$current3 = _composerRef$current2.getBoundingClientRect) === null || _composerRef$current3 === void 0 ? void 0 : _composerRef$current3.call(_composerRef$current2);\n    onAssistantDone(cRect);\n  };\n  const onKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      send();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-list\",\n      ref: listRef,\n      children: [messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble \".concat(m.role),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-inner\",\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), pending && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble assistant\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-inner typing\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"composer\",\n      ref: composerRef,\n      onFocusCapture: reportComposer,\n      onPointerDownCapture: reportComposer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => {\n          setInput(e.target.value);\n          reportComposer();\n        },\n        onKeyDown: onKeyDown,\n        onFocus: reportComposer,\n        placeholder: \"Message Astro\\u2026\",\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatMock, \"WfsNZqlhQLcOxOuteCEwPL+eXPQ=\");\n_c = ChatMock;\nfunction mockReply(text) {\n  const t = text.toLowerCase();\n  if (t.includes(\"publish\")) return \"Published! 🚀\";\n  if (t.includes(\"undo\")) return \"Rolled back. ↩️\";\n  if (t.includes(\"small\")) return \"Going small… 🫧\";\n  if (t.includes(\"load\")) return \"Loading sequence… ⏳\";\n  return \"Toggled scale. What next?\";\n}\nvar _c;\n$RefreshReg$(_c, \"ChatMock\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","STARTER","id","role","text","ChatMock","_ref","_s","onSend","onComposerActive","onAssistantSpot","waitForPulse","onAssistantDone","messages","setMessages","input","setInput","pending","setPending","listRef","composerRef","_listRef$current","current","scrollTo","top","scrollHeight","behavior","reportComposer","_composerRef$current","_composerRef$current$","rect","getBoundingClientRect","call","send","_listRef$current2","_typing$getBoundingCl","_typing$getBoundingCl2","_listRef$current3","_listRef$current3$get","_composerRef$current2","_composerRef$current3","trimmed","trim","userMsg","Date","now","m","Promise","r","requestAnimationFrame","typing","querySelector","reply","mockReply","newMsg","cRect","onKeyDown","e","key","shiftKey","preventDefault","className","children","ref","map","concat","fileName","_jsxFileName","lineNumber","columnNumber","onFocusCapture","onPointerDownCapture","value","onChange","target","onFocus","placeholder","rows","onClick","_c","t","toLowerCase","includes","$RefreshReg$"],"sources":["/Users/yaelre/Documents/Repos/AstroDemo/src/ChatMock.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst STARTER = [\n  { id: 1, role: \"assistant\", text: \"Hey! I’m Astro. Ask me anything ✨\" },\n  {\n    id: 2,\n    role: \"assistant\",\n    text: \"Tip: say 'publish', 'undo', 'small', or 'loader'.\",\n  },\n];\n\nexport default function ChatMock({\n  onSend = () => {},\n  onComposerActive = () => {},\n  onAssistantSpot = () => {},\n  waitForPulse = async () => {},\n  onAssistantDone = () => {},\n}) {\n  const [messages, setMessages] = useState(STARTER);\n  const [input, setInput] = useState(\"\");\n  const [pending, setPending] = useState(false);\n\n  const listRef = useRef(null);\n  const composerRef = useRef(null);\n\n  useEffect(() => {\n    listRef.current?.scrollTo({\n      top: listRef.current.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [messages, pending]);\n\n  // Move Astro to composer when user focuses/starts typing\n  const reportComposer = () => {\n    const rect = composerRef.current?.getBoundingClientRect?.();\n    onComposerActive(rect);\n  };\n\n  const send = async () => {\n    const trimmed = input.trim();\n    if (!trimmed || pending) return;\n\n    // user message\n    const userMsg = { id: Date.now(), role: \"user\", text: trimmed };\n    setMessages((m) => [...m, userMsg]);\n    setInput(\"\");\n    onSend(trimmed);\n\n    // show typing bubble\n    setPending(true);\n\n    // ensure typing bubble is in DOM, then move Astro there\n    await new Promise((r) => requestAnimationFrame(r));\n    await new Promise((r) => requestAnimationFrame(r));\n    const typing = listRef.current?.querySelector(\".bubble.assistant .typing\");\n    const rect =\n      typing?.getBoundingClientRect?.() ??\n      listRef.current?.getBoundingClientRect?.();\n    onAssistantSpot(rect);\n\n    // run Pulse flourish while \"thinking\"\n    await waitForPulse();\n\n    // now render assistant message\n    const reply = mockReply(trimmed);\n    const newMsg = { id: Date.now() + 1, role: \"assistant\", text: reply };\n    setMessages((m) => [...m, newMsg]);\n    setPending(false);\n\n    // after it paints, send Astro back to composer\n    await new Promise((r) => requestAnimationFrame(r));\n    const cRect = composerRef.current?.getBoundingClientRect?.();\n    onAssistantDone(cRect);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      send();\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat-list\" ref={listRef}>\n        {messages.map((m) => (\n          <div key={m.id} className={`bubble ${m.role}`}>\n            <div className=\"bubble-inner\">{m.text}</div>\n          </div>\n        ))}\n        {pending && (\n          <div className=\"bubble assistant\">\n            <div className=\"bubble-inner typing\">\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"composer\"\n        ref={composerRef}\n        onFocusCapture={reportComposer}\n        onPointerDownCapture={reportComposer}\n      >\n        <textarea\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n            reportComposer();\n          }}\n          onKeyDown={onKeyDown}\n          onFocus={reportComposer}\n          placeholder=\"Message Astro…\"\n          rows={1}\n        />\n        <button onClick={send}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nfunction mockReply(text) {\n  const t = text.toLowerCase();\n  if (t.includes(\"publish\")) return \"Published! 🚀\";\n  if (t.includes(\"undo\")) return \"Rolled back. ↩️\";\n  if (t.includes(\"small\")) return \"Going small… 🫧\";\n  if (t.includes(\"load\")) return \"Loading sequence… ⏳\";\n  return \"Toggled scale. What next?\";\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}